{"ast":null,"code":"var _jsxFileName = \"/home/invincix/Desktop/New folder/firebase-react-master/frontend/src/components/UpdateUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { showToastMessage, firebase } from \"../helper\";\nimport UpdateUserForm from \"./UpdateUserForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateUser = ({\n  uid,\n  email,\n  onUserUpdate\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClickUpdate = () => setIsOpen(true);\n\n  const handleOnClose = () => setIsOpen(false);\n\n  const handleOnSave = obj => {\n    // firebase.update(id, obj, (err) => {\n    //   console.log(\"error while update\", err);\n    //   err && showToastMessage(err.message || \"\");\n    //   handleOnClose();\n    // });\n    firebase.update(uid, obj).then(() => setTimeout(onUserUpdate, 1000)).catch(err => showToastMessage(err.message || \"\")).finally(() => handleOnClose());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickUpdate,\n      className: \"btn btn-secondary\",\n      type: \"button\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateUserForm, {\n      isOpen: isOpen,\n      uid: uid,\n      email: email,\n      onSave: handleOnSave,\n      onClose: handleOnClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateUser, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = UpdateUser;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["/home/invincix/Desktop/New folder/firebase-react-master/frontend/src/components/UpdateUser.js"],"names":["useState","showToastMessage","firebase","UpdateUserForm","UpdateUser","uid","email","onUserUpdate","isOpen","setIsOpen","onClickUpdate","handleOnClose","handleOnSave","obj","update","then","setTimeout","catch","err","message","finally"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,WAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AAAA;;AACnD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMU,aAAa,GAAG,MAAMD,SAAS,CAAC,IAAD,CAArC;;AACA,QAAME,aAAa,GAAG,MAAMF,SAAS,CAAC,KAAD,CAArC;;AACA,QAAMG,YAAY,GAAIC,GAAD,IAAS;AAC5B;AACA;AACA;AACA;AACA;AAEAX,IAAAA,QAAQ,CACLY,MADH,CACUT,GADV,EACeQ,GADf,EAEGE,IAFH,CAEQ,MAAMC,UAAU,CAACT,YAAD,EAAe,IAAf,CAFxB,EAGGU,KAHH,CAGUC,GAAD,IAASjB,gBAAgB,CAACiB,GAAG,CAACC,OAAJ,IAAe,EAAhB,CAHlC,EAIGC,OAJH,CAIW,MAAMT,aAAa,EAJ9B;AAKD,GAZD;;AAcA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAED,aADX;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,cAAD;AACE,MAAA,MAAM,EAAEF,MADV;AAEE,MAAA,GAAG,EAAEH,GAFP;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,MAAM,EAAEM,YAJV;AAKE,MAAA,OAAO,EAAED;AALX;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAkBD,CArCD;;GAAMP,U;;KAAAA,U;AAuCN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\n\nimport { showToastMessage, firebase } from \"../helper\";\nimport UpdateUserForm from \"./UpdateUserForm\";\n\nconst UpdateUser = ({ uid, email, onUserUpdate }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClickUpdate = () => setIsOpen(true);\n  const handleOnClose = () => setIsOpen(false);\n  const handleOnSave = (obj) => {\n    // firebase.update(id, obj, (err) => {\n    //   console.log(\"error while update\", err);\n    //   err && showToastMessage(err.message || \"\");\n    //   handleOnClose();\n    // });\n\n    firebase\n      .update(uid, obj)\n      .then(() => setTimeout(onUserUpdate, 1000))\n      .catch((err) => showToastMessage(err.message || \"\"))\n      .finally(() => handleOnClose());\n  };\n\n  return (\n    <>\n      <button\n        onClick={onClickUpdate}\n        className=\"btn btn-secondary\"\n        type=\"button\"\n      >\n        Update\n      </button>\n      <UpdateUserForm\n        isOpen={isOpen}\n        uid={uid}\n        email={email}\n        onSave={handleOnSave}\n        onClose={handleOnClose}\n      />\n    </>\n  );\n};\n\nexport default UpdateUser;\n"]},"metadata":{},"sourceType":"module"}