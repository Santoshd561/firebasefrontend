{"ast":null,"code":"var _jsxFileName = \"/home/invincix/Desktop/New folder/firebase-react-master/frontend/src/components/CreateUserForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport { showToastMessage } from \"../helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = ({\n  password,\n  email\n}) => {\n  const isValidEmailAddress = text => /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(text);\n\n  if (!password || !email) {\n    showToastMessage(\"Email and Password is mandatory\");\n    return false;\n  }\n\n  if (!isValidEmailAddress(email)) {\n    showToastMessage(\"Wrong Email format\");\n    return false;\n  }\n\n  if (password.length < 6) {\n    showToastMessage(\"Password must be of at least 6 characters\");\n    return false;\n  }\n\n  return true;\n};\n\nconst UserForm = props => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onClickCancel = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    props.onClose();\n  };\n\n  const onClickSave = () => {\n    if (validate({\n      password,\n      email\n    })) {\n      setEmail(\"\");\n      setPassword(\"\");\n      props.onSave({\n        password,\n        email\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.isOpen,\n    onRequestClose: onClickCancel,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group margin-bottom-30\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"margin-right-10\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group margin-bottom-30\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"margin-right-10\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row-reverse\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickSave,\n          className: \"p-2 btn btn-primary\",\n          type: \"button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickCancel,\n          className: \"p-2 btn btn-secondary margin-right-10\",\n          type: \"button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserForm, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/home/invincix/Desktop/New folder/firebase-react-master/frontend/src/components/CreateUserForm.js"],"names":["useState","Modal","showToastMessage","validate","password","email","isValidEmailAddress","text","test","length","UserForm","props","setEmail","setPassword","onClickCancel","onClose","onClickSave","onSave","isOpen","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nimport Modal from \"./Modal\";\nimport { showToastMessage } from \"../helper\";\n\nconst validate = ({ password, email }) => {\n  const isValidEmailAddress = (text) =>\n    /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(text);\n\n  if (!password || !email) {\n    showToastMessage(\"Email and Password is mandatory\");\n    return false;\n  }\n  if (!isValidEmailAddress(email)) {\n    showToastMessage(\"Wrong Email format\");\n    return false;\n  }\n  if (password.length < 6) {\n    showToastMessage(\"Password must be of at least 6 characters\");\n    return false;\n  }\n\n  return true;\n};\n\nconst UserForm = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onClickCancel = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    props.onClose();\n  };\n  const onClickSave = () => {\n    if (validate({ password, email })) {\n      setEmail(\"\");\n      setPassword(\"\");\n      props.onSave({ password, email });\n    }\n  };\n\n  return (\n    <Modal isOpen={props.isOpen} onRequestClose={onClickCancel}>\n      <form>\n        <div className=\"form-group margin-bottom-30\">\n          <label htmlFor=\"email\" className=\"margin-right-10\">\n            Email\n          </label>\n          <input\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group margin-bottom-30\">\n          <label htmlFor=\"password\" className=\"margin-right-10\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </div>\n        <div className=\"d-flex flex-row-reverse\">\n          <button\n            onClick={onClickSave}\n            className=\"p-2 btn btn-primary\"\n            type=\"button\"\n          >\n            Save\n          </button>\n          <button\n            onClick={onClickCancel}\n            className=\"p-2 btn btn-secondary margin-right-10\"\n            type=\"button\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}